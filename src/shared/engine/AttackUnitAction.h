// Generated by dia2code
#ifndef ENGINE__ATTACKUNITACTION__H
#define ENGINE__ATTACKUNITACTION__H

#include <memory>
#include "status.h"

namespace status {
  class Element;
  class State;
};
namespace engine {
  class Action;
}

#include "status/Element.h"
#include "Action.h"

namespace engine {

  /// class AttackUnitAction - 
  class AttackUnitAction : public engine::Action {
    // Attributes
  private:
    std::unique_ptr<status::Element> prevshooter;
    std::unique_ptr<status::Element> prevtarget;
  protected:
    int height_shooter;
    int width_shooter;
    int height_target;
    int width_target;
    // Operations
  public:
    AttackUnitAction (int height_shooter, int width_shooter, int height_target, int width_target);
    void apply (status::State* state);
    void undo (status::State* state);
    // Setters and Getters
    int getHeight_shooter() const;
    void setHeight_shooter(int height_shooter);
    int getWidth_shooter() const;
    void setWidth_shooter(int width_shooter);
    int getHeight_target() const;
    void setHeight_target(int height_target);
    int getWidth_target() const;
    void setWidth_target(int width_target);
  };

};

#endif
