// Generated by dia2code
#ifndef SERVER__GAME__H
#define SERVER__GAME__H

#include <thread>
#include <memory>
#include <vector>

namespace engine {
  class Engine;
};
namespace server {
  class Player;
}

#include "engine/Engine.h"
#include "Player.h"
#include "GameStatus.h"

namespace server {

  /// class Game - 
  class Game {
    // Associations
    server::GameStatus status;
    // Attributes
  private:
    engine::Engine engine;
    std::unique_ptr<std::thread> engineThread;
  protected:
    /// 											
    std::vector<Player> players;
    // Operations
  public:
    Game ();
    ~Game ();
    engine::Engine& getEngine ();
    Player& player (int i);
    void run ();
    // Setters and Getters
    GameStatus getStatus() const;
    void setStatus(GameStatus status);
    const std::vector<Player>& getPlayers() const;
    void setPlayers(const std::vector<Player>& players);
  };

};

#endif
