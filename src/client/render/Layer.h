// Generated by dia2code
#ifndef RENDER__LAYER__H
#define RENDER__LAYER__H

#include <vector>
#include <string>

namespace render {
  class Surface;
  class TileSet;
}

#include "TileSet.h"
#include "Surface.h"

namespace render {

  /// class Layer - 
  class Layer {
    // Associations
    // Attributes
  protected:
    Surface* surface;
    TileSet* tileset;
    std::vector<std::vector<int> > layer_array;
    std::string text_file_name;
    std::string type_layer;
    int width;
    int height;
    int tile_width;
    int tile_height;
    // Operations
  public:
    Layer (std::string& text_file_name, std::string& type_layer);
    virtual ~Layer ();
    Surface* getSurface () const;
    void setSurface (std::string& file_name);
    void getFileTextData (std::string& text_file_name);
    TileSet* getTileSet () const;
    int getWidth () const;
    int getHeight () const;
    // Setters and Getters
    const TileSet*& getTileset() const;
    void setTileset(const TileSet*& tileset);
    const std::vector<std::vector<int> >& getLayer_array() const;
    void setLayer_array(const std::vector<std::vector<int> >& layer_array);
    const std::string& getText_file_name() const;
    void setText_file_name(const std::string& text_file_name);
    const std::string& getType_layer() const;
    void setType_layer(const std::string& type_layer);
    void setWidth(int width);
    void setHeight(int height);
    int getTile_width() const;
    void setTile_width(int tile_width);
    int getTile_height() const;
    void setTile_height(int tile_height);
  };

};

#endif
